//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMMP {
	using System;
	
	
	public partial class ProjectTasksDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public ProjectTasksDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Use this list to track upcoming events, status updates or other team news.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Announcements")]
		public Microsoft.SharePoint.Linq.EntityList<Announcement> Announcements {
			get {
				return this.GetList<Announcement>("Announcements");
			}
		}
		
		/// <summary>
		/// Use the Calendar list to keep informed of upcoming meetings, deadlines, and other important events.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Calendar")]
		public Microsoft.SharePoint.Linq.EntityList<CalendarEvent> Calendar {
			get {
				return this.GetList<CalendarEvent>("Calendar");
			}
		}
		
		/// <summary>
		/// Use the Deliverables list to communicate key deliverables and dates. These can be linked with Project Professional to manage dependencies across projects.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Deliverables")]
		public Microsoft.SharePoint.Linq.EntityList<DeliverablesProjectSiteDeliverable> Deliverables {
			get {
				return this.GetList<DeliverablesProjectSiteDeliverable>("Deliverables");
			}
		}
		
		/// <summary>
		/// Use the Issues list to manage a set of issues related to this project. You can assign, prioritize, and follow the progress of issues from start to finish.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Issues")]
		public Microsoft.SharePoint.Linq.EntityList<IssuesProjectSiteIssue> Issues {
			get {
				return this.GetList<IssuesProjectSiteIssue>("Issues");
			}
		}
		
		/// <summary>
		/// Use the Links list for links to Web pages that your team members will find interesting or useful.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Links")]
		public Microsoft.SharePoint.Linq.EntityList<Link> Links {
			get {
				return this.GetList<Link>("Links");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PMM Presentations")]
		public Microsoft.SharePoint.Linq.EntityList<Document> PMMPresentations {
			get {
				return this.GetList<Document>("PMM Presentations");
			}
		}
		
		/// <summary>
		/// Create a document library when you have a collection of documents or other files that you want to share. Document libraries support features such as sub-folders, file versioning, and check-in/check-out.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Project Documents")]
		public Microsoft.SharePoint.Linq.EntityList<ProjectDocumentsProjectSiteDocument> ProjectDocuments {
			get {
				return this.GetList<ProjectDocumentsProjectSiteDocument>("Project Documents");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Project Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<ProjectTasksProjectTask> ProjectTasks {
			get {
				return this.GetList<ProjectTasksProjectTask>("Project Tasks");
			}
		}
		
		/// <summary>
		/// Use the Risks list to manage a set of risks related to this project. You can assign, prioritize, and follow the progress of risks from start to finish.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Risks")]
		public Microsoft.SharePoint.Linq.EntityList<RisksProjectSiteRisk> Risks {
			get {
				return this.GetList<RisksProjectSiteRisk>("Risks");
			}
		}
		
		/// <summary>
		/// Use the Tasks list to keep track of work that you or your team needs to complete.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> Tasks {
			get {
				return this.GetList<Item>("Tasks");
			}
		}
		
		/// <summary>
		/// Use the Team Discussion list to hold newsgroup-style discussions on topics relevant to your team.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Team Discussion")]
		public Microsoft.SharePoint.Linq.EntityList<Item> TeamDiscussion {
			get {
				return this.GetList<Item>("Team Discussion");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Announcement))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Folder))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Event))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DeliverablesProjectSiteDeliverable))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(IssuesProjectSiteIssue))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Link))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ProjectTasksProjectTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(RisksProjectSiteRisk))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Task))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Message))]
	public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		protected string _title;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Item() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Create a new news item, status or other short piece of information.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Announcement", Id="0x0104")]
	public partial class Announcement : Item {
		
		private string _body;
		
		private System.Nullable<System.DateTime> _expires;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Announcement() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_expires", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Expires {
			get {
				return this._expires;
			}
			set {
				if ((value != this._expires)) {
					this.OnPropertyChanging("Expires", this._expires);
					this._expires = value;
					this.OnPropertyChanged("Expires");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new folder.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Folder", Id="0x0120")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Discussion))]
	public partial class Folder : Item {
		
		private string _name;
		
		private System.Nullable<int> _itemChildCountId;
		
		private string _itemChildCountItemChildCount;
		
		private System.Nullable<int> _folderChildCountId;
		
		private string _folderChildCountFolderChildCount;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Folder() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public virtual string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_itemChildCountId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ItemChildCountId {
			get {
				return this._itemChildCountId;
			}
			set {
				if ((value != this._itemChildCountId)) {
					this.OnPropertyChanging("ItemChildCountId", this._itemChildCountId);
					this._itemChildCountId = value;
					this.OnPropertyChanged("ItemChildCountId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_itemChildCountItemChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ItemChildCountItemChildCount {
			get {
				return this._itemChildCountItemChildCount;
			}
			set {
				if ((value != this._itemChildCountItemChildCount)) {
					this.OnPropertyChanging("ItemChildCountItemChildCount", this._itemChildCountItemChildCount);
					this._itemChildCountItemChildCount = value;
					this.OnPropertyChanged("ItemChildCountItemChildCount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_folderChildCountId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> FolderChildCountId {
			get {
				return this._folderChildCountId;
			}
			set {
				if ((value != this._folderChildCountId)) {
					this.OnPropertyChanging("FolderChildCountId", this._folderChildCountId);
					this._folderChildCountId = value;
					this.OnPropertyChanged("FolderChildCountId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_folderChildCountFolderChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string FolderChildCountFolderChildCount {
			get {
				return this._folderChildCountFolderChildCount;
			}
			set {
				if ((value != this._folderChildCountFolderChildCount)) {
					this.OnPropertyChanging("FolderChildCountFolderChildCount", this._folderChildCountFolderChildCount);
					this._folderChildCountFolderChildCount = value;
					this.OnPropertyChanged("FolderChildCountFolderChildCount");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CalendarEvent))]
	public partial class Event : Item {
		
		private string _location;
		
		protected System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		protected string _description;
		
		private System.Nullable<bool> _allDayEvent;
		
		private System.Nullable<bool> _recurrence;
		
		private System.Nullable<bool> _workspace;
		
		private System.Nullable<Category> _category;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Event() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_location", FieldType="Text")]
		public string Location {
			get {
				return this._location;
			}
			set {
				if ((value != this._location)) {
					this.OnPropertyChanging("Location", this._location);
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_endTime", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_allDayEvent", FieldType="AllDayEvent")]
		public System.Nullable<bool> AllDayEvent {
			get {
				return this._allDayEvent;
			}
			set {
				if ((value != this._allDayEvent)) {
					this.OnPropertyChanging("AllDayEvent", this._allDayEvent);
					this._allDayEvent = value;
					this.OnPropertyChanged("AllDayEvent");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_recurrence", FieldType="Recurrence")]
		public System.Nullable<bool> Recurrence {
			get {
				return this._recurrence;
			}
			set {
				if ((value != this._recurrence)) {
					this.OnPropertyChanging("Recurrence", this._recurrence);
					this._recurrence = value;
					this.OnPropertyChanged("Recurrence");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_workspace", FieldType="CrossProjectLink")]
		public System.Nullable<bool> Workspace {
			get {
				return this._workspace;
			}
			set {
				if ((value != this._workspace)) {
					this.OnPropertyChanging("Workspace", this._workspace);
					this._workspace = value;
					this.OnPropertyChanged("Workspace");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
		public System.Nullable<Category> Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new link to a Web page or other resource.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Link", Id="0x0105")]
	public partial class Link : Item {
		
		private string _uRL;
		
		private string _comments;
		
		private string _uRL0;
		
		private string _uRL1;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Link() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URL", Storage="_uRL", Required=true, FieldType="Url")]
		public string URL {
			get {
				return this._uRL;
			}
			set {
				if ((value != this._uRL)) {
					this.OnPropertyChanging("URL", this._uRL);
					this._uRL = value;
					this.OnPropertyChanged("URL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLwMenu", Storage="_uRL0", ReadOnly=true, FieldType="Computed")]
		public string URL0 {
			get {
				return this._uRL0;
			}
			set {
				if ((value != this._uRL0)) {
					this.OnPropertyChanging("URL0", this._uRL0);
					this._uRL0 = value;
					this.OnPropertyChanged("URL0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLNoMenu", Storage="_uRL1", ReadOnly=true, FieldType="Computed")]
		public string URL1 {
			get {
				return this._uRL1;
			}
			set {
				if ((value != this._uRL1)) {
					this.OnPropertyChanging("URL1", this._uRL1);
					this._uRL1 = value;
					this.OnPropertyChanged("URL1");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Link.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Link.");
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PMMPresentationsPMMPresentation))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ProjectDocumentsProjectSiteDocument))]
	public partial class Document : Item {
		
		private string _name;
		
		private string _documentModifiedBy;
		
		private string _documentCreatedBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Document() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentModifiedBy {
			get {
				return this._documentModifiedBy;
			}
			set {
				if ((value != this._documentModifiedBy)) {
					this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
					this._documentModifiedBy = value;
					this.OnPropertyChanged("DocumentModifiedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentCreatedBy {
			get {
				return this._documentCreatedBy;
			}
			set {
				if ((value != this._documentCreatedBy)) {
					this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
					this._documentCreatedBy = value;
					this.OnPropertyChanged("DocumentCreatedBy");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksTask))]
	public partial class Task : Item {
		
		private System.Nullable<double> _complete;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _startDate;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<Priority> _priority;
		
		protected System.Nullable<TaskStatus> _taskStatus;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Task() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_taskStatus", FieldType="Choice")]
		public virtual System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new message.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Message", Id="0x0107")]
	public partial class Message : Item {
		
		private string _discussionSubject;
		
		private string _version0;
		
		private string _body;
		
		private string _reply;
		
		private string _post;
		
		private string _threading;
		
		private string _postedBy;
		
		private string _eMailSender;
		
		private System.Nullable<int> _modifiedById;
		
		private string _modifiedByNameWithPicture;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Message() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_discussionSubject", ReadOnly=true, FieldType="Computed")]
		public string DiscussionSubject {
			get {
				return this._discussionSubject;
			}
			set {
				if ((value != this._discussionSubject)) {
					this.OnPropertyChanging("DiscussionSubject", this._discussionSubject);
					this._discussionSubject = value;
					this.OnPropertyChanged("DiscussionSubject");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_version0", ReadOnly=true, FieldType="Text")]
		public string Version0 {
			get {
				return this._version0;
			}
			set {
				if ((value != this._version0)) {
					this.OnPropertyChanging("Version0", this._version0);
					this._version0 = value;
					this.OnPropertyChanged("Version0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_reply", ReadOnly=true, FieldType="Computed")]
		public string Reply {
			get {
				return this._reply;
			}
			set {
				if ((value != this._reply)) {
					this.OnPropertyChanging("Reply", this._reply);
					this._reply = value;
					this.OnPropertyChanged("Reply");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_post", ReadOnly=true, FieldType="Computed")]
		public string Post {
			get {
				return this._post;
			}
			set {
				if ((value != this._post)) {
					this.OnPropertyChanging("Post", this._post);
					this._post = value;
					this.OnPropertyChanged("Post");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_threading", ReadOnly=true, FieldType="Computed")]
		public string Threading {
			get {
				return this._threading;
			}
			set {
				if ((value != this._threading)) {
					this.OnPropertyChanging("Threading", this._threading);
					this._threading = value;
					this.OnPropertyChanged("Threading");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_postedBy", ReadOnly=true, FieldType="Computed")]
		public string PostedBy {
			get {
				return this._postedBy;
			}
			set {
				if ((value != this._postedBy)) {
					this.OnPropertyChanging("PostedBy", this._postedBy);
					this._postedBy = value;
					this.OnPropertyChanged("PostedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_eMailSender", FieldType="Note")]
		public string EMailSender {
			get {
				return this._eMailSender;
			}
			set {
				if ((value != this._eMailSender)) {
					this.OnPropertyChanging("EMailSender", this._eMailSender);
					this._eMailSender = value;
					this.OnPropertyChanged("EMailSender");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Message.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Message.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedById", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ModifiedById {
			get {
				return this._modifiedById;
			}
			set {
				if ((value != this._modifiedById)) {
					this.OnPropertyChanging("ModifiedById", this._modifiedById);
					this._modifiedById = value;
					this.OnPropertyChanged("ModifiedById");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedByNameWithPicture", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ModifiedByNameWithPicture {
			get {
				return this._modifiedByNameWithPicture;
			}
			set {
				if ((value != this._modifiedByNameWithPicture)) {
					this.OnPropertyChanging("ModifiedByNameWithPicture", this._modifiedByNameWithPicture);
					this._modifiedByNameWithPicture = value;
					this.OnPropertyChanged("ModifiedByNameWithPicture");
				}
			}
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksSummaryTask))]
	public partial class SummaryTask : Folder {
		
		private System.Nullable<double> _complete;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _startDate;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<Priority> _priority;
		
		protected System.Nullable<TaskStatus> _taskStatus;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SummaryTask() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_taskStatus", FieldType="Choice")]
		public virtual System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new discussion topic.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Discussion", Id="0x012002")]
	public partial class Discussion : Folder {
		
		private string _discussionSubject;
		
		private string _version0;
		
		private string _body;
		
		private string _reply;
		
		private string _post;
		
		private string _threading;
		
		private string _postedBy;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
		private string _eMailSender;
		
		private System.Nullable<int> _modifiedById;
		
		private string _modifiedByNameWithPicture;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Discussion() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public override string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_discussionSubject", ReadOnly=true, FieldType="Computed")]
		public string DiscussionSubject {
			get {
				return this._discussionSubject;
			}
			set {
				if ((value != this._discussionSubject)) {
					this.OnPropertyChanging("DiscussionSubject", this._discussionSubject);
					this._discussionSubject = value;
					this.OnPropertyChanged("DiscussionSubject");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_version0", ReadOnly=true, FieldType="Text")]
		public string Version0 {
			get {
				return this._version0;
			}
			set {
				if ((value != this._version0)) {
					this.OnPropertyChanging("Version0", this._version0);
					this._version0 = value;
					this.OnPropertyChanged("Version0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_reply", ReadOnly=true, FieldType="Computed")]
		public string Reply {
			get {
				return this._reply;
			}
			set {
				if ((value != this._reply)) {
					this.OnPropertyChanging("Reply", this._reply);
					this._reply = value;
					this.OnPropertyChanged("Reply");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_post", ReadOnly=true, FieldType="Computed")]
		public string Post {
			get {
				return this._post;
			}
			set {
				if ((value != this._post)) {
					this.OnPropertyChanging("Post", this._post);
					this._post = value;
					this.OnPropertyChanged("Post");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_threading", ReadOnly=true, FieldType="Computed")]
		public string Threading {
			get {
				return this._threading;
			}
			set {
				if ((value != this._threading)) {
					this.OnPropertyChanging("Threading", this._threading);
					this._threading = value;
					this.OnPropertyChanged("Threading");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_postedBy", ReadOnly=true, FieldType="Computed")]
		public string PostedBy {
			get {
				return this._postedBy;
			}
			set {
				if ((value != this._postedBy)) {
					this.OnPropertyChanging("PostedBy", this._postedBy);
					this._postedBy = value;
					this.OnPropertyChanged("PostedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionLastUpdated", Storage="_lastUpdated", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated {
			get {
				return this._lastUpdated;
			}
			set {
				if ((value != this._lastUpdated)) {
					this.OnPropertyChanging("LastUpdated", this._lastUpdated);
					this._lastUpdated = value;
					this.OnPropertyChanged("LastUpdated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_eMailSender", FieldType="Note")]
		public string EMailSender {
			get {
				return this._eMailSender;
			}
			set {
				if ((value != this._eMailSender)) {
					this.OnPropertyChanging("EMailSender", this._eMailSender);
					this._eMailSender = value;
					this.OnPropertyChanged("EMailSender");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Name {
			get {
				throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Discussion.");
			}
			set {
				throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Discussion.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedById", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ModifiedById {
			get {
				return this._modifiedById;
			}
			set {
				if ((value != this._modifiedById)) {
					this.OnPropertyChanging("ModifiedById", this._modifiedById);
					this._modifiedById = value;
					this.OnPropertyChanged("ModifiedById");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedByNameWithPicture", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ModifiedByNameWithPicture {
			get {
				return this._modifiedByNameWithPicture;
			}
			set {
				if ((value != this._modifiedByNameWithPicture)) {
					this.OnPropertyChanging("ModifiedByNameWithPicture", this._modifiedByNameWithPicture);
					this._modifiedByNameWithPicture = value;
					this.OnPropertyChanged("ModifiedByNameWithPicture");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102", List="Calendar")]
	public partial class CalendarEvent : Event {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CalendarEvent() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public override string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Tasks")]
	public partial class TasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Tasks")]
	public partial class TasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Project Site Deliverable", Id="0x01", List="Deliverables")]
	public partial class DeliverablesProjectSiteDeliverable : Item {
		
		private string _description;
		
		private System.Nullable<System.DateTime> _deliverableStart;
		
		private System.Nullable<System.DateTime> _deliverableFinish;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DeliverablesProjectSiteDeliverable() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CommitmentStart", Storage="_deliverableStart", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DeliverableStart {
			get {
				return this._deliverableStart;
			}
			set {
				if ((value != this._deliverableStart)) {
					this.OnPropertyChanging("DeliverableStart", this._deliverableStart);
					this._deliverableStart = value;
					this.OnPropertyChanged("DeliverableStart");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CommitmentFinish", Storage="_deliverableFinish", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DeliverableFinish {
			get {
				return this._deliverableFinish;
			}
			set {
				if ((value != this._deliverableFinish)) {
					this.OnPropertyChanging("DeliverableFinish", this._deliverableFinish);
					this._deliverableFinish = value;
					this.OnPropertyChanged("DeliverableFinish");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Project Site Issue", Id="0x01", List="Issues")]
	public partial class IssuesProjectSiteIssue : Item {
		
		private System.Nullable<System.DateTime> _dueDate;
		
		private string _discussion;
		
		private string _resolution;
		
		private System.Nullable<Status> _status;
		
		private System.Nullable<Category0> _category;
		
		private System.Nullable<Priority0> _priority;
		
		private System.Nullable<int> _ownerId;
		
		private string _owner;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public IssuesProjectSiteIssue() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Discussion", Storage="_discussion", FieldType="Note")]
		public string Discussion {
			get {
				return this._discussion;
			}
			set {
				if ((value != this._discussion)) {
					this.OnPropertyChanging("Discussion", this._discussion);
					this._discussion = value;
					this.OnPropertyChanged("Discussion");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Resolution", Storage="_resolution", FieldType="Note")]
		public string Resolution {
			get {
				return this._resolution;
			}
			set {
				if ((value != this._resolution)) {
					this.OnPropertyChanging("Resolution", this._resolution);
					this._resolution = value;
					this.OnPropertyChanged("Resolution");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Choice")]
		public System.Nullable<Status> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
		public System.Nullable<Category0> Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority0> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Owner", Storage="_ownerId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> OwnerId {
			get {
				return this._ownerId;
			}
			set {
				if ((value != this._ownerId)) {
					this.OnPropertyChanging("OwnerId", this._ownerId);
					this._ownerId = value;
					this.OnPropertyChanged("OwnerId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Owner", Storage="_owner", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Owner {
			get {
				return this._owner;
			}
			set {
				if ((value != this._owner)) {
					this.OnPropertyChanging("Owner", this._owner);
					this._owner = value;
					this.OnPropertyChanged("Owner");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Project Task", Id="0x01", List="Project Tasks")]
	public partial class ProjectTasksProjectTask : Item {
		
		private string _task;
		
		private string _duration;
		
		private string _predecessor;
		
		private System.Nullable<System.DateTime> _start;
		
		private System.Nullable<System.DateTime> _finish;
		
		private System.Nullable<System.DateTime> _finish0;
		
		private System.Nullable<System.Guid> _uniqueID;
		
		private System.Nullable<double> _complete;
		
		private System.Nullable<System.DateTime> _deadline;
		
		private System.Nullable<DrivingPath> _drivingPath;
		
		private System.Nullable<ShowOn> _showOn;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ProjectTasksProjectTask() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Task", Storage="_task", FieldType="Text")]
		public string Task {
			get {
				return this._task;
			}
			set {
				if ((value != this._task)) {
					this.OnPropertyChanging("Task", this._task);
					this._task = value;
					this.OnPropertyChanged("Task");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Duration", Storage="_duration", FieldType="Text")]
		public string Duration {
			get {
				return this._duration;
			}
			set {
				if ((value != this._duration)) {
					this.OnPropertyChanging("Duration", this._duration);
					this._duration = value;
					this.OnPropertyChanged("Duration");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Predecessor", Storage="_predecessor", FieldType="Text")]
		public string Predecessor {
			get {
				return this._predecessor;
			}
			set {
				if ((value != this._predecessor)) {
					this.OnPropertyChanging("Predecessor", this._predecessor);
					this._predecessor = value;
					this.OnPropertyChanged("Predecessor");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Start", Storage="_start", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Start {
			get {
				return this._start;
			}
			set {
				if ((value != this._start)) {
					this.OnPropertyChanging("Start", this._start);
					this._start = value;
					this.OnPropertyChanged("Start");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Finish", Storage="_finish", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Finish {
			get {
				return this._finish;
			}
			set {
				if ((value != this._finish)) {
					this.OnPropertyChanging("Finish", this._finish);
					this._finish = value;
					this.OnPropertyChanged("Finish");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ModifiedOn", Storage="_finish0", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Finish0 {
			get {
				return this._finish0;
			}
			set {
				if ((value != this._finish0)) {
					this.OnPropertyChanging("Finish0", this._finish0);
					this._finish0 = value;
					this.OnPropertyChanged("Finish0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="UniqueID", Storage="_uniqueID", FieldType="Guid")]
		public System.Nullable<System.Guid> UniqueID {
			get {
				return this._uniqueID;
			}
			set {
				if ((value != this._uniqueID)) {
					this.OnPropertyChanging("UniqueID", this._uniqueID);
					this._uniqueID = value;
					this.OnPropertyChanged("UniqueID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Deadline", Storage="_deadline", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Deadline {
			get {
				return this._deadline;
			}
			set {
				if ((value != this._deadline)) {
					this.OnPropertyChanging("Deadline", this._deadline);
					this._deadline = value;
					this.OnPropertyChanged("Deadline");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DrivingPath", Storage="_drivingPath", FieldType="MultiChoice")]
		public System.Nullable<DrivingPath> DrivingPath {
			get {
				return this._drivingPath;
			}
			set {
				if ((value != this._drivingPath)) {
					this.OnPropertyChanging("DrivingPath", this._drivingPath);
					this._drivingPath = value;
					this.OnPropertyChanged("DrivingPath");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShowOn", Storage="_showOn", FieldType="MultiChoice")]
		public System.Nullable<ShowOn> ShowOn {
			get {
				return this._showOn;
			}
			set {
				if ((value != this._showOn)) {
					this.OnPropertyChanging("ShowOn", this._showOn);
					this._showOn = value;
					this.OnPropertyChanged("ShowOn");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Project Site Risk", Id="0x01", List="Risks")]
	public partial class RisksProjectSiteRisk : Item {
		
		private System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<double> _probability;
		
		private System.Nullable<double> _impact;
		
		private System.Nullable<double> _exposure;
		
		private System.Nullable<double> _cost;
		
		private System.Nullable<double> _costExposure;
		
		private string _description;
		
		private string _mitigationPlan;
		
		private string _contingencyPlan;
		
		private string _triggerDescription;
		
		private System.Nullable<Status> _status;
		
		private System.Nullable<Category0> _category;
		
		private string _trigger;
		
		private System.Nullable<int> _ownerId;
		
		private string _owner;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public RisksProjectSiteRisk() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Probability", Storage="_probability", Required=true, FieldType="Number")]
		public System.Nullable<double> Probability {
			get {
				return this._probability;
			}
			set {
				if ((value != this._probability)) {
					this.OnPropertyChanging("Probability", this._probability);
					this._probability = value;
					this.OnPropertyChanged("Probability");
				}
			}
		}
		
		/// <summary>
		/// The magnitude of impact should the risk actually happen
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Impact", Storage="_impact", Required=true, FieldType="Number")]
		public System.Nullable<double> Impact {
			get {
				return this._impact;
			}
			set {
				if ((value != this._impact)) {
					this.OnPropertyChanging("Impact", this._impact);
					this._impact = value;
					this.OnPropertyChanged("Impact");
				}
			}
		}
		
		/// <summary>
		/// The overall threat of the risk.  Exposure is calculated by multiplying risk probability with the impact
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Exposure", Storage="_exposure", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> Exposure {
			get {
				return this._exposure;
			}
			set {
				if ((value != this._exposure)) {
					this.OnPropertyChanging("Exposure", this._exposure);
					this._exposure = value;
					this.OnPropertyChanged("Exposure");
				}
			}
		}
		
		/// <summary>
		/// The cost impact should the risk actually happen
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Cost", Storage="_cost", FieldType="Currency")]
		public System.Nullable<double> Cost {
			get {
				return this._cost;
			}
			set {
				if ((value != this._cost)) {
					this.OnPropertyChanging("Cost", this._cost);
					this._cost = value;
					this.OnPropertyChanged("Cost");
				}
			}
		}
		
		/// <summary>
		/// The overall threat of the risk measured in cost. Cost exposure is calculated by multiplying risk probability with the cost.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Cost_x0020_Exposure", Storage="_costExposure", ReadOnly=true, IsCalculated=true, FieldType="Currency")]
		public System.Nullable<double> CostExposure {
			get {
				return this._costExposure;
			}
			set {
				if ((value != this._costExposure)) {
					this.OnPropertyChanging("CostExposure", this._costExposure);
					this._costExposure = value;
					this.OnPropertyChanged("CostExposure");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		/// <summary>
		/// The plans to mitigate the risk
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Mitigation_x0020_plan", Storage="_mitigationPlan", FieldType="Note")]
		public string MitigationPlan {
			get {
				return this._mitigationPlan;
			}
			set {
				if ((value != this._mitigationPlan)) {
					this.OnPropertyChanging("MitigationPlan", this._mitigationPlan);
					this._mitigationPlan = value;
					this.OnPropertyChanged("MitigationPlan");
				}
			}
		}
		
		/// <summary>
		/// The fallback plans should the risk occur
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Contingency_x0020_plan", Storage="_contingencyPlan", FieldType="Note")]
		public string ContingencyPlan {
			get {
				return this._contingencyPlan;
			}
			set {
				if ((value != this._contingencyPlan)) {
					this.OnPropertyChanging("ContingencyPlan", this._contingencyPlan);
					this._contingencyPlan = value;
					this.OnPropertyChanged("ContingencyPlan");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Trigger_x0020_Description", Storage="_triggerDescription", FieldType="Note")]
		public string TriggerDescription {
			get {
				return this._triggerDescription;
			}
			set {
				if ((value != this._triggerDescription)) {
					this.OnPropertyChanging("TriggerDescription", this._triggerDescription);
					this._triggerDescription = value;
					this.OnPropertyChanged("TriggerDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Choice")]
		public System.Nullable<Status> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
		public System.Nullable<Category0> Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
		
		/// <summary>
		/// The condition that triggers the contingency plan
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Trigger", Storage="_trigger", FieldType="Choice")]
		public string Trigger {
			get {
				return this._trigger;
			}
			set {
				if ((value != this._trigger)) {
					this.OnPropertyChanging("Trigger", this._trigger);
					this._trigger = value;
					this.OnPropertyChanged("Trigger");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Owner", Storage="_ownerId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> OwnerId {
			get {
				return this._ownerId;
			}
			set {
				if ((value != this._ownerId)) {
					this.OnPropertyChanging("OwnerId", this._ownerId);
					this._ownerId = value;
					this.OnPropertyChanged("OwnerId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Owner", Storage="_owner", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Owner {
			get {
				return this._owner;
			}
			set {
				if ((value != this._owner)) {
					this.OnPropertyChanging("Owner", this._owner);
					this._owner = value;
					this.OnPropertyChanged("Owner");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// PMM Report Content Types
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="PMM Presentation", Id="0x0101", List="PMM Presentations")]
	public partial class PMMPresentationsPMMPresentation : Document {
		
		private string _comments;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PMMPresentationsPMMPresentation() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PMMPresentationComments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Project Site Document", Id="0x0101", List="Project Documents")]
	public partial class ProjectDocumentsProjectSiteDocument : Document {
		
		private System.Nullable<Status> _status;
		
		private System.Nullable<int> _ownerId;
		
		private string _owner;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ProjectDocumentsProjectSiteDocument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Choice")]
		public System.Nullable<Status> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Owner", Storage="_ownerId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> OwnerId {
			get {
				return this._ownerId;
			}
			set {
				if ((value != this._ownerId)) {
					this.OnPropertyChanging("OwnerId", this._ownerId);
					this._ownerId = value;
					this.OnPropertyChanged("OwnerId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Owner", Storage="_owner", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Owner {
			get {
				return this._owner;
			}
			set {
				if ((value != this._owner)) {
					this.OnPropertyChanging("Owner", this._owner);
					this._owner = value;
					this.OnPropertyChanged("Owner");
				}
			}
		}
	}
	
	public enum Category : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	public enum Priority : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) High")]
		_1High = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Normal")]
		_2Normal = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Low")]
		_3Low = 8,
	}
	
	public enum TaskStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not Started")]
		NotStarted = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="In Progress")]
		InProgress = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Deferred")]
		Deferred = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting on someone else")]
		WaitingOnSomeoneElse = 32,
	}
	
	public enum Status : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Active")]
		_1Active = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Postponed")]
		_2Postponed = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Closed")]
		_3Closed = 8,
	}
	
	public enum Category0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	public enum Priority0 : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) High")]
		_1High = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Medium")]
		_2Medium = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Low")]
		_3Low = 8,
	}
	
	[System.FlagsAttribute()]
	public enum DrivingPath : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="86")]
		_86 = 2,
	}
	
	[System.FlagsAttribute()]
	public enum ShowOn : int {
		
		None = 0,
		
		Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "MilestoneSummary")]
		MilestoneSummary = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "ReviewDemoMilestones")]
		ReviewDemoMilestones = 4,
	}
	
	public sealed class Trigger {
		
		public const string Date = "Date";
		
		public const string ExposureOverThreshold = "Exposure over threshold";
		
		public const string TasksNotCompleted = "Tasks not completed";
		
		public const string Other = "Other";
	}
}
